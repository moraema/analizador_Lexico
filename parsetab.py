
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMPARACION_LESSCOMPARACION_GREATERCOMPARACION_LESS_EQCOMPARACION_GREATER_EQleftCOMPARACION_EQCOMPARACION_NEQleftOPERADORASIGNACION COMILLAS COMPARACION_EQ COMPARACION_GREATER COMPARACION_GREATER_EQ COMPARACION_LESS COMPARACION_LESS_EQ COMPARACION_NEQ DECREMENTO DELIMITADOR_L DELIMITADOR_R DOS_PUNTOS ELSE ENTERO ESCRIBIR FLOTANTE FOR FUNC IF INCREMENTO INIT LEER LOGICO OPERADOR SEPARADOR T_PARENTESIS_L T_PARENTESIS_R VAL VARIABLE WHILEprograma : funcionfuncion : FUNC INIT DELIMITADOR_L bloque DELIMITADOR_Rbloque : instruccion bloque\n              | instruccioninstruccion : ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR\n                   | LEER VARIABLE SEPARADOR\n                   | declaracion_variable\n                   | estructura_if\n                   | estructura_while\n                   | estructura_for\n                   | error SEPARADORdeclaracion_variable : VAL VARIABLE ASIGNACION expresion SEPARADORestructura_if : IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_Restructura_while : WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_Restructura_for : FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_Rexpresion_logica : expresion_relacional\n                        | expresion_logica LOGICO expresion_relacionaloperador_comparacion : COMPARACION_GREATER\n                            | COMPARACION_LESS\n                            | COMPARACION_LESS_EQ\n                            | COMPARACION_GREATER_EQexpresion_relacional : expresion COMPARACION_LESS expresion\n                            | expresion COMPARACION_GREATER expresion\n                            | expresion COMPARACION_LESS_EQ expresion\n                            | expresion COMPARACION_GREATER_EQ expresion\n                            | expresion COMPARACION_EQ expresion\n                            | expresion COMPARACION_NEQ expresion\n                            | T_PARENTESIS_L expresion_relacional T_PARENTESIS_Rexpresion : expresion OPERADOR expresionexpresion : ENTERO\n                 | FLOTANTE\n                 | COMILLAS\n                 | VARIABLE'
    
_lr_action_items = {'FUNC':([0,],[3,]),'$end':([1,2,19,],[0,-1,-2,]),'INIT':([3,],[4,]),'DELIMITADOR_L':([4,25,26,29,30,31,32,33,53,54,55,56,57,58,59,60,61,77,],[5,38,-16,-30,-31,-32,-33,48,-17,-22,-23,-24,-25,-26,-27,-29,-28,78,]),'ESCRIBIR':([5,7,10,11,12,13,23,36,38,48,50,64,65,66,78,80,],[8,8,-7,-8,-9,-10,-11,-6,8,8,-5,-12,-13,-14,8,-15,]),'LEER':([5,7,10,11,12,13,23,36,38,48,50,64,65,66,78,80,],[9,9,-7,-8,-9,-10,-11,-6,9,9,-5,-12,-13,-14,9,-15,]),'error':([5,7,10,11,12,13,23,36,38,48,50,64,65,66,78,80,],[14,14,-7,-8,-9,-10,-11,-6,14,14,-5,-12,-13,-14,14,-15,]),'VAL':([5,7,10,11,12,13,23,34,36,38,48,50,64,65,66,78,80,],[15,15,-7,-8,-9,-10,-11,15,-6,15,15,-5,-12,-13,-14,15,-15,]),'IF':([5,7,10,11,12,13,23,36,38,48,50,64,65,66,78,80,],[16,16,-7,-8,-9,-10,-11,-6,16,16,-5,-12,-13,-14,16,-15,]),'WHILE':([5,7,10,11,12,13,23,36,38,48,50,64,65,66,78,80,],[17,17,-7,-8,-9,-10,-11,-6,17,17,-5,-12,-13,-14,17,-15,]),'FOR':([5,7,10,11,12,13,23,36,38,48,50,64,65,66,78,80,],[18,18,-7,-8,-9,-10,-11,-6,18,18,-5,-12,-13,-14,18,-15,]),'DELIMITADOR_R':([6,7,10,11,12,13,20,23,36,50,52,62,64,65,66,79,80,],[19,-4,-7,-8,-9,-10,-3,-11,-6,-5,65,66,-12,-13,-14,80,-15,]),'DOS_PUNTOS':([8,],[21,]),'VARIABLE':([9,15,16,17,28,37,39,40,41,42,43,44,45,46,49,64,67,68,69,70,71,73,],[22,24,32,32,32,32,32,32,32,32,32,32,32,32,63,-12,32,-18,-19,-20,-21,74,]),'SEPARADOR':([14,22,29,30,31,32,35,51,60,72,],[23,36,-30,-31,-32,-33,50,64,-29,73,]),'T_PARENTESIS_L':([16,17,18,28,39,],[28,28,34,28,28,]),'ENTERO':([16,17,28,37,39,40,41,42,43,44,45,46,67,68,69,70,71,],[29,29,29,29,29,29,29,29,29,29,29,29,29,-18,-19,-20,-21,]),'FLOTANTE':([16,17,28,37,39,40,41,42,43,44,45,46,67,68,69,70,71,],[30,30,30,30,30,30,30,30,30,30,30,30,30,-18,-19,-20,-21,]),'COMILLAS':([16,17,21,28,37,39,40,41,42,43,44,45,46,67,68,69,70,71,],[31,31,35,31,31,31,31,31,31,31,31,31,31,31,-18,-19,-20,-21,]),'ASIGNACION':([24,],[37,]),'LOGICO':([25,26,29,30,31,32,33,53,54,55,56,57,58,59,60,61,],[39,-16,-30,-31,-32,-33,39,-17,-22,-23,-24,-25,-26,-27,-29,-28,]),'COMPARACION_LESS':([27,29,30,31,32,60,63,],[40,-30,-31,-32,-33,-29,69,]),'COMPARACION_GREATER':([27,29,30,31,32,60,63,],[41,-30,-31,-32,-33,-29,68,]),'COMPARACION_LESS_EQ':([27,29,30,31,32,60,63,],[42,-30,-31,-32,-33,-29,70,]),'COMPARACION_GREATER_EQ':([27,29,30,31,32,60,63,],[43,-30,-31,-32,-33,-29,71,]),'COMPARACION_EQ':([27,29,30,31,32,60,],[44,-30,-31,-32,-33,-29,]),'COMPARACION_NEQ':([27,29,30,31,32,60,],[45,-30,-31,-32,-33,-29,]),'OPERADOR':([27,29,30,31,32,51,54,55,56,57,58,59,60,72,74,75,],[46,-30,-31,-32,-33,46,46,46,46,46,46,46,-29,46,75,76,]),'T_PARENTESIS_R':([29,30,31,32,47,54,55,56,57,58,59,60,61,76,],[-30,-31,-32,-33,61,-22,-23,-24,-25,-26,-27,-29,-28,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funcion':([0,],[2,]),'bloque':([5,7,38,48,78,],[6,20,52,62,79,]),'instruccion':([5,7,38,48,78,],[7,7,7,7,7,]),'declaracion_variable':([5,7,34,38,48,78,],[10,10,49,10,10,10,]),'estructura_if':([5,7,38,48,78,],[11,11,11,11,11,]),'estructura_while':([5,7,38,48,78,],[12,12,12,12,12,]),'estructura_for':([5,7,38,48,78,],[13,13,13,13,13,]),'expresion_logica':([16,17,],[25,33,]),'expresion_relacional':([16,17,28,39,],[26,26,47,53,]),'expresion':([16,17,28,37,39,40,41,42,43,44,45,46,67,],[27,27,27,51,27,54,55,56,57,58,59,60,72,]),'operador_comparacion':([63,],[67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> funcion','programa',1,'p_programa','analizador_sintactico.py',11),
  ('funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R','funcion',5,'p_funcion','analizador_sintactico.py',15),
  ('bloque -> instruccion bloque','bloque',2,'p_bloque','analizador_sintactico.py',19),
  ('bloque -> instruccion','bloque',1,'p_bloque','analizador_sintactico.py',20),
  ('instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR','instruccion',4,'p_instruccion','analizador_sintactico.py',27),
  ('instruccion -> LEER VARIABLE SEPARADOR','instruccion',3,'p_instruccion','analizador_sintactico.py',28),
  ('instruccion -> declaracion_variable','instruccion',1,'p_instruccion','analizador_sintactico.py',29),
  ('instruccion -> estructura_if','instruccion',1,'p_instruccion','analizador_sintactico.py',30),
  ('instruccion -> estructura_while','instruccion',1,'p_instruccion','analizador_sintactico.py',31),
  ('instruccion -> estructura_for','instruccion',1,'p_instruccion','analizador_sintactico.py',32),
  ('instruccion -> error SEPARADOR','instruccion',2,'p_instruccion','analizador_sintactico.py',33),
  ('declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR','declaracion_variable',5,'p_declaracion_variable','analizador_sintactico.py',45),
  ('estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R','estructura_if',5,'p_estructura_if','analizador_sintactico.py',49),
  ('estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R','estructura_while',5,'p_estructura_while','analizador_sintactico.py',53),
  ('estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R','estructura_for',14,'p_estructura_for','analizador_sintactico.py',57),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','analizador_sintactico.py',61),
  ('expresion_logica -> expresion_logica LOGICO expresion_relacional','expresion_logica',3,'p_expresion_logica','analizador_sintactico.py',62),
  ('operador_comparacion -> COMPARACION_GREATER','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',69),
  ('operador_comparacion -> COMPARACION_LESS','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',70),
  ('operador_comparacion -> COMPARACION_LESS_EQ','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',71),
  ('operador_comparacion -> COMPARACION_GREATER_EQ','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',72),
  ('expresion_relacional -> expresion COMPARACION_LESS expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',76),
  ('expresion_relacional -> expresion COMPARACION_GREATER expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',77),
  ('expresion_relacional -> expresion COMPARACION_LESS_EQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',78),
  ('expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',79),
  ('expresion_relacional -> expresion COMPARACION_EQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',80),
  ('expresion_relacional -> expresion COMPARACION_NEQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',81),
  ('expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',82),
  ('expresion -> expresion OPERADOR expresion','expresion',3,'p_expresion_aritmetica','analizador_sintactico.py',89),
  ('expresion -> ENTERO','expresion',1,'p_expresion','analizador_sintactico.py',93),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion','analizador_sintactico.py',94),
  ('expresion -> COMILLAS','expresion',1,'p_expresion','analizador_sintactico.py',95),
  ('expresion -> VARIABLE','expresion',1,'p_expresion','analizador_sintactico.py',96),
]
