
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMPARACION_LESSCOMPARACION_GREATERCOMPARACION_LESS_EQCOMPARACION_GREATER_EQleftCOMPARACION_EQCOMPARACION_NEQleftOPERADORASIGNACION COMILLAS COMPARACION_EQ COMPARACION_GREATER COMPARACION_GREATER_EQ COMPARACION_LESS COMPARACION_LESS_EQ COMPARACION_NEQ DECREMENTO DELIMITADOR_L DELIMITADOR_R DOS_PUNTOS ELSE ENTERO ESCRIBIR FLOTANTE FOR FUNC IF INCREMENTO INIT LEER LOGICO OPERADOR SEPARADOR T_PARENTESIS_L T_PARENTESIS_R VAL VARIABLE WHILEprograma : funcionfuncion : FUNC INIT DELIMITADOR_L bloque DELIMITADOR_Rbloque : instruccion bloque\n              | instruccioninstruccion : ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR\n                   | LEER VARIABLE SEPARADOR\n                   | declaracion_variable\n                   | estructura_if\n                   | estructura_while\n                   | estructura_fordeclaracion_variable : VAL VARIABLE ASIGNACION expresion SEPARADORestructura_if : IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_Restructura_while : WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_Restructura_for : FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR  VARIABLE  OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_Rexpresion_logica : expresion_relacional\n                        | expresion_logica LOGICO expresion_relacionaloperador_comparacion : COMPARACION_GREATER\n                            | COMPARACION_LESS\n                            | COMPARACION_LESS_EQ\n                            | COMPARACION_GREATER_EQexpresion_relacional : expresion COMPARACION_LESS expresion\n                            | expresion COMPARACION_GREATER expresion\n                            | expresion COMPARACION_LESS_EQ expresion\n                            | expresion COMPARACION_GREATER_EQ expresion\n                            | expresion COMPARACION_EQ expresion\n                            | expresion COMPARACION_NEQ expresion\n                            | T_PARENTESIS_L expresion_relacional T_PARENTESIS_Rexpresion : expresion OPERADOR expresionexpresion : ENTERO\n                 | FLOTANTE\n                 | COMILLAS\n                 | VARIABLE'
    
_lr_action_items = {'FUNC':([0,],[3,]),'$end':([1,2,18,],[0,-1,-2,]),'INIT':([3,],[4,]),'DELIMITADOR_L':([4,23,24,27,28,29,30,31,51,52,53,54,55,56,57,58,59,75,],[5,36,-15,-29,-30,-31,-32,46,-16,-21,-22,-23,-24,-25,-26,-28,-27,76,]),'ESCRIBIR':([5,7,10,11,12,13,34,36,46,48,62,63,64,76,78,],[8,8,-7,-8,-9,-10,-6,8,8,-5,-11,-12,-13,8,-14,]),'LEER':([5,7,10,11,12,13,34,36,46,48,62,63,64,76,78,],[9,9,-7,-8,-9,-10,-6,9,9,-5,-11,-12,-13,9,-14,]),'VAL':([5,7,10,11,12,13,32,34,36,46,48,62,63,64,76,78,],[14,14,-7,-8,-9,-10,14,-6,14,14,-5,-11,-12,-13,14,-14,]),'IF':([5,7,10,11,12,13,34,36,46,48,62,63,64,76,78,],[15,15,-7,-8,-9,-10,-6,15,15,-5,-11,-12,-13,15,-14,]),'WHILE':([5,7,10,11,12,13,34,36,46,48,62,63,64,76,78,],[16,16,-7,-8,-9,-10,-6,16,16,-5,-11,-12,-13,16,-14,]),'FOR':([5,7,10,11,12,13,34,36,46,48,62,63,64,76,78,],[17,17,-7,-8,-9,-10,-6,17,17,-5,-11,-12,-13,17,-14,]),'DELIMITADOR_R':([6,7,10,11,12,13,19,34,48,50,60,62,63,64,77,78,],[18,-4,-7,-8,-9,-10,-3,-6,-5,63,64,-11,-12,-13,78,-14,]),'DOS_PUNTOS':([8,],[20,]),'VARIABLE':([9,14,15,16,26,35,37,38,39,40,41,42,43,44,47,62,65,66,67,68,69,71,],[21,22,30,30,30,30,30,30,30,30,30,30,30,30,61,-11,30,-17,-18,-19,-20,72,]),'T_PARENTESIS_L':([15,16,17,26,37,],[26,26,32,26,26,]),'ENTERO':([15,16,26,35,37,38,39,40,41,42,43,44,65,66,67,68,69,],[27,27,27,27,27,27,27,27,27,27,27,27,27,-17,-18,-19,-20,]),'FLOTANTE':([15,16,26,35,37,38,39,40,41,42,43,44,65,66,67,68,69,],[28,28,28,28,28,28,28,28,28,28,28,28,28,-17,-18,-19,-20,]),'COMILLAS':([15,16,20,26,35,37,38,39,40,41,42,43,44,65,66,67,68,69,],[29,29,33,29,29,29,29,29,29,29,29,29,29,29,-17,-18,-19,-20,]),'SEPARADOR':([21,27,28,29,30,33,49,58,70,],[34,-29,-30,-31,-32,48,62,-28,71,]),'ASIGNACION':([22,],[35,]),'LOGICO':([23,24,27,28,29,30,31,51,52,53,54,55,56,57,58,59,],[37,-15,-29,-30,-31,-32,37,-16,-21,-22,-23,-24,-25,-26,-28,-27,]),'COMPARACION_LESS':([25,27,28,29,30,58,61,],[38,-29,-30,-31,-32,-28,67,]),'COMPARACION_GREATER':([25,27,28,29,30,58,61,],[39,-29,-30,-31,-32,-28,66,]),'COMPARACION_LESS_EQ':([25,27,28,29,30,58,61,],[40,-29,-30,-31,-32,-28,68,]),'COMPARACION_GREATER_EQ':([25,27,28,29,30,58,61,],[41,-29,-30,-31,-32,-28,69,]),'COMPARACION_EQ':([25,27,28,29,30,58,],[42,-29,-30,-31,-32,-28,]),'COMPARACION_NEQ':([25,27,28,29,30,58,],[43,-29,-30,-31,-32,-28,]),'OPERADOR':([25,27,28,29,30,49,52,53,54,55,56,57,58,70,72,73,],[44,-29,-30,-31,-32,44,44,44,44,44,44,44,-28,44,73,74,]),'T_PARENTESIS_R':([27,28,29,30,45,52,53,54,55,56,57,58,59,74,],[-29,-30,-31,-32,59,-21,-22,-23,-24,-25,-26,-28,-27,75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funcion':([0,],[2,]),'bloque':([5,7,36,46,76,],[6,19,50,60,77,]),'instruccion':([5,7,36,46,76,],[7,7,7,7,7,]),'declaracion_variable':([5,7,32,36,46,76,],[10,10,47,10,10,10,]),'estructura_if':([5,7,36,46,76,],[11,11,11,11,11,]),'estructura_while':([5,7,36,46,76,],[12,12,12,12,12,]),'estructura_for':([5,7,36,46,76,],[13,13,13,13,13,]),'expresion_logica':([15,16,],[23,31,]),'expresion_relacional':([15,16,26,37,],[24,24,45,51,]),'expresion':([15,16,26,35,37,38,39,40,41,42,43,44,65,],[25,25,25,49,25,52,53,54,55,56,57,58,70,]),'operador_comparacion':([61,],[65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> funcion','programa',1,'p_programa','analizador_sintactico.py',12),
  ('funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R','funcion',5,'p_funcion','analizador_sintactico.py',16),
  ('bloque -> instruccion bloque','bloque',2,'p_bloque','analizador_sintactico.py',20),
  ('bloque -> instruccion','bloque',1,'p_bloque','analizador_sintactico.py',21),
  ('instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR','instruccion',4,'p_instruccion','analizador_sintactico.py',28),
  ('instruccion -> LEER VARIABLE SEPARADOR','instruccion',3,'p_instruccion','analizador_sintactico.py',29),
  ('instruccion -> declaracion_variable','instruccion',1,'p_instruccion','analizador_sintactico.py',30),
  ('instruccion -> estructura_if','instruccion',1,'p_instruccion','analizador_sintactico.py',31),
  ('instruccion -> estructura_while','instruccion',1,'p_instruccion','analizador_sintactico.py',32),
  ('instruccion -> estructura_for','instruccion',1,'p_instruccion','analizador_sintactico.py',33),
  ('declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR','declaracion_variable',5,'p_declaracion_variable','analizador_sintactico.py',42),
  ('estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R','estructura_if',5,'p_estructura_if','analizador_sintactico.py',46),
  ('estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R','estructura_while',5,'p_estructura_while','analizador_sintactico.py',50),
  ('estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R','estructura_for',14,'p_estructura_for','analizador_sintactico.py',54),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','analizador_sintactico.py',60),
  ('expresion_logica -> expresion_logica LOGICO expresion_relacional','expresion_logica',3,'p_expresion_logica','analizador_sintactico.py',61),
  ('operador_comparacion -> COMPARACION_GREATER','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',68),
  ('operador_comparacion -> COMPARACION_LESS','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',69),
  ('operador_comparacion -> COMPARACION_LESS_EQ','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',70),
  ('operador_comparacion -> COMPARACION_GREATER_EQ','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',71),
  ('expresion_relacional -> expresion COMPARACION_LESS expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',76),
  ('expresion_relacional -> expresion COMPARACION_GREATER expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',77),
  ('expresion_relacional -> expresion COMPARACION_LESS_EQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',78),
  ('expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',79),
  ('expresion_relacional -> expresion COMPARACION_EQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',80),
  ('expresion_relacional -> expresion COMPARACION_NEQ expresion','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',81),
  ('expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R','expresion_relacional',3,'p_expresion_relacional','analizador_sintactico.py',82),
  ('expresion -> expresion OPERADOR expresion','expresion',3,'p_expresion_aritmetica','analizador_sintactico.py',89),
  ('expresion -> ENTERO','expresion',1,'p_expresion','analizador_sintactico.py',93),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion','analizador_sintactico.py',94),
  ('expresion -> COMILLAS','expresion',1,'p_expresion','analizador_sintactico.py',95),
  ('expresion -> VARIABLE','expresion',1,'p_expresion','analizador_sintactico.py',96),
]
