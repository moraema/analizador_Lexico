Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECREMENTO
    ELSE
    INCREMENTO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> funcion
Rule 2     funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R
Rule 3     bloque -> instruccion bloque
Rule 4     bloque -> instruccion
Rule 5     instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
Rule 6     instruccion -> LEER VARIABLE SEPARADOR
Rule 7     instruccion -> declaracion_variable
Rule 8     instruccion -> estructura_if
Rule 9     instruccion -> estructura_while
Rule 10    instruccion -> estructura_for
Rule 11    declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR
Rule 12    estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
Rule 13    estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
Rule 14    estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
Rule 15    expresion_logica -> expresion_relacional
Rule 16    expresion_logica -> expresion_logica LOGICO expresion_relacional
Rule 17    operador_comparacion -> COMPARACION_GREATER
Rule 18    operador_comparacion -> COMPARACION_LESS
Rule 19    operador_comparacion -> COMPARACION_LESS_EQ
Rule 20    operador_comparacion -> COMPARACION_GREATER_EQ
Rule 21    expresion_relacional -> expresion COMPARACION_LESS expresion
Rule 22    expresion_relacional -> expresion COMPARACION_GREATER expresion
Rule 23    expresion_relacional -> expresion COMPARACION_LESS_EQ expresion
Rule 24    expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion
Rule 25    expresion_relacional -> expresion COMPARACION_EQ expresion
Rule 26    expresion_relacional -> expresion COMPARACION_NEQ expresion
Rule 27    expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
Rule 28    expresion -> expresion OPERADOR expresion
Rule 29    expresion -> ENTERO
Rule 30    expresion -> FLOTANTE
Rule 31    expresion -> COMILLAS
Rule 32    expresion -> VARIABLE

Terminals, with rules where they appear

ASIGNACION           : 11
COMILLAS             : 5 31
COMPARACION_EQ       : 25
COMPARACION_GREATER  : 17 22
COMPARACION_GREATER_EQ : 20 24
COMPARACION_LESS     : 18 21
COMPARACION_LESS_EQ  : 19 23
COMPARACION_NEQ      : 26
DECREMENTO           : 
DELIMITADOR_L        : 2 12 13 14
DELIMITADOR_R        : 2 12 13 14
DOS_PUNTOS           : 5
ELSE                 : 
ENTERO               : 29
ESCRIBIR             : 5
FLOTANTE             : 30
FOR                  : 14
FUNC                 : 2
IF                   : 12
INCREMENTO           : 
INIT                 : 2
LEER                 : 6
LOGICO               : 16
OPERADOR             : 14 14 28
SEPARADOR            : 5 6 11 14
T_PARENTESIS_L       : 14 27
T_PARENTESIS_R       : 14 27
VAL                  : 11
VARIABLE             : 6 11 14 14 32
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

bloque               : 2 3 12 13 14
declaracion_variable : 7 14
estructura_for       : 10
estructura_if        : 8
estructura_while     : 9
expresion            : 11 14 21 21 22 22 23 23 24 24 25 25 26 26 28 28
expresion_logica     : 12 13 16
expresion_relacional : 15 16 27
funcion              : 1
instruccion          : 3 4
operador_comparacion : 14
programa             : 0

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . funcion
    (2) funcion -> . FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R

    FUNC            shift and go to state 3

    programa                       shift and go to state 1
    funcion                        shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> funcion .

    $end            reduce using rule 1 (programa -> funcion .)


state 3

    (2) funcion -> FUNC . INIT DELIMITADOR_L bloque DELIMITADOR_R

    INIT            shift and go to state 4


state 4

    (2) funcion -> FUNC INIT . DELIMITADOR_L bloque DELIMITADOR_R

    DELIMITADOR_L   shift and go to state 5


state 5

    (2) funcion -> FUNC INIT DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (12) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (13) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    VAL             shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17

    bloque                         shift and go to state 6
    instruccion                    shift and go to state 7
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 6

    (2) funcion -> FUNC INIT DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 18


state 7

    (3) bloque -> instruccion . bloque
    (4) bloque -> instruccion .
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (12) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (13) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    DELIMITADOR_R   reduce using rule 4 (bloque -> instruccion .)
    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    VAL             shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17

    instruccion                    shift and go to state 7
    bloque                         shift and go to state 19
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 8

    (5) instruccion -> ESCRIBIR . DOS_PUNTOS COMILLAS SEPARADOR

    DOS_PUNTOS      shift and go to state 20


state 9

    (6) instruccion -> LEER . VARIABLE SEPARADOR

    VARIABLE        shift and go to state 21


state 10

    (7) instruccion -> declaracion_variable .

    ESCRIBIR        reduce using rule 7 (instruccion -> declaracion_variable .)
    LEER            reduce using rule 7 (instruccion -> declaracion_variable .)
    VAL             reduce using rule 7 (instruccion -> declaracion_variable .)
    IF              reduce using rule 7 (instruccion -> declaracion_variable .)
    WHILE           reduce using rule 7 (instruccion -> declaracion_variable .)
    FOR             reduce using rule 7 (instruccion -> declaracion_variable .)
    DELIMITADOR_R   reduce using rule 7 (instruccion -> declaracion_variable .)


state 11

    (8) instruccion -> estructura_if .

    ESCRIBIR        reduce using rule 8 (instruccion -> estructura_if .)
    LEER            reduce using rule 8 (instruccion -> estructura_if .)
    VAL             reduce using rule 8 (instruccion -> estructura_if .)
    IF              reduce using rule 8 (instruccion -> estructura_if .)
    WHILE           reduce using rule 8 (instruccion -> estructura_if .)
    FOR             reduce using rule 8 (instruccion -> estructura_if .)
    DELIMITADOR_R   reduce using rule 8 (instruccion -> estructura_if .)


state 12

    (9) instruccion -> estructura_while .

    ESCRIBIR        reduce using rule 9 (instruccion -> estructura_while .)
    LEER            reduce using rule 9 (instruccion -> estructura_while .)
    VAL             reduce using rule 9 (instruccion -> estructura_while .)
    IF              reduce using rule 9 (instruccion -> estructura_while .)
    WHILE           reduce using rule 9 (instruccion -> estructura_while .)
    FOR             reduce using rule 9 (instruccion -> estructura_while .)
    DELIMITADOR_R   reduce using rule 9 (instruccion -> estructura_while .)


state 13

    (10) instruccion -> estructura_for .

    ESCRIBIR        reduce using rule 10 (instruccion -> estructura_for .)
    LEER            reduce using rule 10 (instruccion -> estructura_for .)
    VAL             reduce using rule 10 (instruccion -> estructura_for .)
    IF              reduce using rule 10 (instruccion -> estructura_for .)
    WHILE           reduce using rule 10 (instruccion -> estructura_for .)
    FOR             reduce using rule 10 (instruccion -> estructura_for .)
    DELIMITADOR_R   reduce using rule 10 (instruccion -> estructura_for .)


state 14

    (11) declaracion_variable -> VAL . VARIABLE ASIGNACION expresion SEPARADOR

    VARIABLE        shift and go to state 22


state 15

    (12) estructura_if -> IF . expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (15) expresion_logica -> . expresion_relacional
    (16) expresion_logica -> . expresion_logica LOGICO expresion_relacional
    (21) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (22) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (23) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (24) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (27) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 26
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion_logica               shift and go to state 23
    expresion_relacional           shift and go to state 24
    expresion                      shift and go to state 25

state 16

    (13) estructura_while -> WHILE . expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (15) expresion_logica -> . expresion_relacional
    (16) expresion_logica -> . expresion_logica LOGICO expresion_relacional
    (21) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (22) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (23) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (24) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (27) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 26
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion_logica               shift and go to state 31
    expresion_relacional           shift and go to state 24
    expresion                      shift and go to state 25

state 17

    (14) estructura_for -> FOR . T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    T_PARENTESIS_L  shift and go to state 32


state 18

    (2) funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R .

    $end            reduce using rule 2 (funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R .)


state 19

    (3) bloque -> instruccion bloque .

    DELIMITADOR_R   reduce using rule 3 (bloque -> instruccion bloque .)


state 20

    (5) instruccion -> ESCRIBIR DOS_PUNTOS . COMILLAS SEPARADOR

    COMILLAS        shift and go to state 33


state 21

    (6) instruccion -> LEER VARIABLE . SEPARADOR

    SEPARADOR       shift and go to state 34


state 22

    (11) declaracion_variable -> VAL VARIABLE . ASIGNACION expresion SEPARADOR

    ASIGNACION      shift and go to state 35


state 23

    (12) estructura_if -> IF expresion_logica . DELIMITADOR_L bloque DELIMITADOR_R
    (16) expresion_logica -> expresion_logica . LOGICO expresion_relacional

    DELIMITADOR_L   shift and go to state 36
    LOGICO          shift and go to state 37


state 24

    (15) expresion_logica -> expresion_relacional .

    DELIMITADOR_L   reduce using rule 15 (expresion_logica -> expresion_relacional .)
    LOGICO          reduce using rule 15 (expresion_logica -> expresion_relacional .)


state 25

    (21) expresion_relacional -> expresion . COMPARACION_LESS expresion
    (22) expresion_relacional -> expresion . COMPARACION_GREATER expresion
    (23) expresion_relacional -> expresion . COMPARACION_LESS_EQ expresion
    (24) expresion_relacional -> expresion . COMPARACION_GREATER_EQ expresion
    (25) expresion_relacional -> expresion . COMPARACION_EQ expresion
    (26) expresion_relacional -> expresion . COMPARACION_NEQ expresion
    (28) expresion -> expresion . OPERADOR expresion

    COMPARACION_LESS shift and go to state 38
    COMPARACION_GREATER shift and go to state 39
    COMPARACION_LESS_EQ shift and go to state 40
    COMPARACION_GREATER_EQ shift and go to state 41
    COMPARACION_EQ  shift and go to state 42
    COMPARACION_NEQ shift and go to state 43
    OPERADOR        shift and go to state 44


state 26

    (27) expresion_relacional -> T_PARENTESIS_L . expresion_relacional T_PARENTESIS_R
    (21) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (22) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (23) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (24) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (27) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 26
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion_relacional           shift and go to state 45
    expresion                      shift and go to state 25

state 27

    (29) expresion -> ENTERO .

    COMPARACION_LESS reduce using rule 29 (expresion -> ENTERO .)
    COMPARACION_GREATER reduce using rule 29 (expresion -> ENTERO .)
    COMPARACION_LESS_EQ reduce using rule 29 (expresion -> ENTERO .)
    COMPARACION_GREATER_EQ reduce using rule 29 (expresion -> ENTERO .)
    COMPARACION_EQ  reduce using rule 29 (expresion -> ENTERO .)
    COMPARACION_NEQ reduce using rule 29 (expresion -> ENTERO .)
    OPERADOR        reduce using rule 29 (expresion -> ENTERO .)
    SEPARADOR       reduce using rule 29 (expresion -> ENTERO .)
    DELIMITADOR_L   reduce using rule 29 (expresion -> ENTERO .)
    LOGICO          reduce using rule 29 (expresion -> ENTERO .)
    T_PARENTESIS_R  reduce using rule 29 (expresion -> ENTERO .)


state 28

    (30) expresion -> FLOTANTE .

    COMPARACION_LESS reduce using rule 30 (expresion -> FLOTANTE .)
    COMPARACION_GREATER reduce using rule 30 (expresion -> FLOTANTE .)
    COMPARACION_LESS_EQ reduce using rule 30 (expresion -> FLOTANTE .)
    COMPARACION_GREATER_EQ reduce using rule 30 (expresion -> FLOTANTE .)
    COMPARACION_EQ  reduce using rule 30 (expresion -> FLOTANTE .)
    COMPARACION_NEQ reduce using rule 30 (expresion -> FLOTANTE .)
    OPERADOR        reduce using rule 30 (expresion -> FLOTANTE .)
    SEPARADOR       reduce using rule 30 (expresion -> FLOTANTE .)
    DELIMITADOR_L   reduce using rule 30 (expresion -> FLOTANTE .)
    LOGICO          reduce using rule 30 (expresion -> FLOTANTE .)
    T_PARENTESIS_R  reduce using rule 30 (expresion -> FLOTANTE .)


state 29

    (31) expresion -> COMILLAS .

    COMPARACION_LESS reduce using rule 31 (expresion -> COMILLAS .)
    COMPARACION_GREATER reduce using rule 31 (expresion -> COMILLAS .)
    COMPARACION_LESS_EQ reduce using rule 31 (expresion -> COMILLAS .)
    COMPARACION_GREATER_EQ reduce using rule 31 (expresion -> COMILLAS .)
    COMPARACION_EQ  reduce using rule 31 (expresion -> COMILLAS .)
    COMPARACION_NEQ reduce using rule 31 (expresion -> COMILLAS .)
    OPERADOR        reduce using rule 31 (expresion -> COMILLAS .)
    SEPARADOR       reduce using rule 31 (expresion -> COMILLAS .)
    DELIMITADOR_L   reduce using rule 31 (expresion -> COMILLAS .)
    LOGICO          reduce using rule 31 (expresion -> COMILLAS .)
    T_PARENTESIS_R  reduce using rule 31 (expresion -> COMILLAS .)


state 30

    (32) expresion -> VARIABLE .

    COMPARACION_LESS reduce using rule 32 (expresion -> VARIABLE .)
    COMPARACION_GREATER reduce using rule 32 (expresion -> VARIABLE .)
    COMPARACION_LESS_EQ reduce using rule 32 (expresion -> VARIABLE .)
    COMPARACION_GREATER_EQ reduce using rule 32 (expresion -> VARIABLE .)
    COMPARACION_EQ  reduce using rule 32 (expresion -> VARIABLE .)
    COMPARACION_NEQ reduce using rule 32 (expresion -> VARIABLE .)
    OPERADOR        reduce using rule 32 (expresion -> VARIABLE .)
    SEPARADOR       reduce using rule 32 (expresion -> VARIABLE .)
    DELIMITADOR_L   reduce using rule 32 (expresion -> VARIABLE .)
    LOGICO          reduce using rule 32 (expresion -> VARIABLE .)
    T_PARENTESIS_R  reduce using rule 32 (expresion -> VARIABLE .)


state 31

    (13) estructura_while -> WHILE expresion_logica . DELIMITADOR_L bloque DELIMITADOR_R
    (16) expresion_logica -> expresion_logica . LOGICO expresion_relacional

    DELIMITADOR_L   shift and go to state 46
    LOGICO          shift and go to state 37


state 32

    (14) estructura_for -> FOR T_PARENTESIS_L . declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (11) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR

    VAL             shift and go to state 14

    declaracion_variable           shift and go to state 47

state 33

    (5) instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS . SEPARADOR

    SEPARADOR       shift and go to state 48


state 34

    (6) instruccion -> LEER VARIABLE SEPARADOR .

    ESCRIBIR        reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    LEER            reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    VAL             reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    IF              reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    WHILE           reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    FOR             reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    DELIMITADOR_R   reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)


state 35

    (11) declaracion_variable -> VAL VARIABLE ASIGNACION . expresion SEPARADOR
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 49

state 36

    (12) estructura_if -> IF expresion_logica DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (12) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (13) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    VAL             shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17

    bloque                         shift and go to state 50
    instruccion                    shift and go to state 7
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 37

    (16) expresion_logica -> expresion_logica LOGICO . expresion_relacional
    (21) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (22) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (23) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (24) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (27) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 26
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion_relacional           shift and go to state 51
    expresion                      shift and go to state 25

state 38

    (21) expresion_relacional -> expresion COMPARACION_LESS . expresion
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 52

state 39

    (22) expresion_relacional -> expresion COMPARACION_GREATER . expresion
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 53

state 40

    (23) expresion_relacional -> expresion COMPARACION_LESS_EQ . expresion
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 54

state 41

    (24) expresion_relacional -> expresion COMPARACION_GREATER_EQ . expresion
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 55

state 42

    (25) expresion_relacional -> expresion COMPARACION_EQ . expresion
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 56

state 43

    (26) expresion_relacional -> expresion COMPARACION_NEQ . expresion
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 57

state 44

    (28) expresion -> expresion OPERADOR . expresion
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 58

state 45

    (27) expresion_relacional -> T_PARENTESIS_L expresion_relacional . T_PARENTESIS_R

    T_PARENTESIS_R  shift and go to state 59


state 46

    (13) estructura_while -> WHILE expresion_logica DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (12) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (13) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    VAL             shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17

    bloque                         shift and go to state 60
    instruccion                    shift and go to state 7
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 47

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable . VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    VARIABLE        shift and go to state 61


state 48

    (5) instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .

    ESCRIBIR        reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    LEER            reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    VAL             reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    IF              reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    WHILE           reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    FOR             reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    DELIMITADOR_R   reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)


state 49

    (11) declaracion_variable -> VAL VARIABLE ASIGNACION expresion . SEPARADOR
    (28) expresion -> expresion . OPERADOR expresion

    SEPARADOR       shift and go to state 62
    OPERADOR        shift and go to state 44


state 50

    (12) estructura_if -> IF expresion_logica DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 63


state 51

    (16) expresion_logica -> expresion_logica LOGICO expresion_relacional .

    DELIMITADOR_L   reduce using rule 16 (expresion_logica -> expresion_logica LOGICO expresion_relacional .)
    LOGICO          reduce using rule 16 (expresion_logica -> expresion_logica LOGICO expresion_relacional .)


state 52

    (21) expresion_relacional -> expresion COMPARACION_LESS expresion .
    (28) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 21 (expresion_relacional -> expresion COMPARACION_LESS expresion .)
    LOGICO          reduce using rule 21 (expresion_relacional -> expresion COMPARACION_LESS expresion .)
    T_PARENTESIS_R  reduce using rule 21 (expresion_relacional -> expresion COMPARACION_LESS expresion .)
    OPERADOR        shift and go to state 44


state 53

    (22) expresion_relacional -> expresion COMPARACION_GREATER expresion .
    (28) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 22 (expresion_relacional -> expresion COMPARACION_GREATER expresion .)
    LOGICO          reduce using rule 22 (expresion_relacional -> expresion COMPARACION_GREATER expresion .)
    T_PARENTESIS_R  reduce using rule 22 (expresion_relacional -> expresion COMPARACION_GREATER expresion .)
    OPERADOR        shift and go to state 44


state 54

    (23) expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .
    (28) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 23 (expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .)
    LOGICO          reduce using rule 23 (expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .)
    T_PARENTESIS_R  reduce using rule 23 (expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .)
    OPERADOR        shift and go to state 44


state 55

    (24) expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .
    (28) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 24 (expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .)
    LOGICO          reduce using rule 24 (expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .)
    T_PARENTESIS_R  reduce using rule 24 (expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .)
    OPERADOR        shift and go to state 44


state 56

    (25) expresion_relacional -> expresion COMPARACION_EQ expresion .
    (28) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 25 (expresion_relacional -> expresion COMPARACION_EQ expresion .)
    LOGICO          reduce using rule 25 (expresion_relacional -> expresion COMPARACION_EQ expresion .)
    T_PARENTESIS_R  reduce using rule 25 (expresion_relacional -> expresion COMPARACION_EQ expresion .)
    OPERADOR        shift and go to state 44


state 57

    (26) expresion_relacional -> expresion COMPARACION_NEQ expresion .
    (28) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 26 (expresion_relacional -> expresion COMPARACION_NEQ expresion .)
    LOGICO          reduce using rule 26 (expresion_relacional -> expresion COMPARACION_NEQ expresion .)
    T_PARENTESIS_R  reduce using rule 26 (expresion_relacional -> expresion COMPARACION_NEQ expresion .)
    OPERADOR        shift and go to state 44


state 58

    (28) expresion -> expresion OPERADOR expresion .
    (28) expresion -> expresion . OPERADOR expresion

    COMPARACION_LESS reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_GREATER reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_LESS_EQ reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_GREATER_EQ reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_EQ  reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_NEQ reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    OPERADOR        reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    SEPARADOR       reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    DELIMITADOR_L   reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    LOGICO          reduce using rule 28 (expresion -> expresion OPERADOR expresion .)
    T_PARENTESIS_R  reduce using rule 28 (expresion -> expresion OPERADOR expresion .)

  ! OPERADOR        [ shift and go to state 44 ]


state 59

    (27) expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .

    DELIMITADOR_L   reduce using rule 27 (expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .)
    LOGICO          reduce using rule 27 (expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .)
    T_PARENTESIS_R  reduce using rule 27 (expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .)


state 60

    (13) estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 64


state 61

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE . operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (17) operador_comparacion -> . COMPARACION_GREATER
    (18) operador_comparacion -> . COMPARACION_LESS
    (19) operador_comparacion -> . COMPARACION_LESS_EQ
    (20) operador_comparacion -> . COMPARACION_GREATER_EQ

    COMPARACION_GREATER shift and go to state 66
    COMPARACION_LESS shift and go to state 67
    COMPARACION_LESS_EQ shift and go to state 68
    COMPARACION_GREATER_EQ shift and go to state 69

    operador_comparacion           shift and go to state 65

state 62

    (11) declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .

    ESCRIBIR        reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    LEER            reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    VAL             reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    IF              reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    WHILE           reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    FOR             reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    DELIMITADOR_R   reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    VARIABLE        reduce using rule 11 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)


state 63

    (12) estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .

    ESCRIBIR        reduce using rule 12 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    LEER            reduce using rule 12 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    VAL             reduce using rule 12 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    IF              reduce using rule 12 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    WHILE           reduce using rule 12 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    FOR             reduce using rule 12 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    DELIMITADOR_R   reduce using rule 12 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)


state 64

    (13) estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .

    ESCRIBIR        reduce using rule 13 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    LEER            reduce using rule 13 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    VAL             reduce using rule 13 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    IF              reduce using rule 13 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    WHILE           reduce using rule 13 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    FOR             reduce using rule 13 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    DELIMITADOR_R   reduce using rule 13 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)


state 65

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion . expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (28) expresion -> . expresion OPERADOR expresion
    (29) expresion -> . ENTERO
    (30) expresion -> . FLOTANTE
    (31) expresion -> . COMILLAS
    (32) expresion -> . VARIABLE

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 28
    COMILLAS        shift and go to state 29
    VARIABLE        shift and go to state 30

    expresion                      shift and go to state 70

state 66

    (17) operador_comparacion -> COMPARACION_GREATER .

    ENTERO          reduce using rule 17 (operador_comparacion -> COMPARACION_GREATER .)
    FLOTANTE        reduce using rule 17 (operador_comparacion -> COMPARACION_GREATER .)
    COMILLAS        reduce using rule 17 (operador_comparacion -> COMPARACION_GREATER .)
    VARIABLE        reduce using rule 17 (operador_comparacion -> COMPARACION_GREATER .)


state 67

    (18) operador_comparacion -> COMPARACION_LESS .

    ENTERO          reduce using rule 18 (operador_comparacion -> COMPARACION_LESS .)
    FLOTANTE        reduce using rule 18 (operador_comparacion -> COMPARACION_LESS .)
    COMILLAS        reduce using rule 18 (operador_comparacion -> COMPARACION_LESS .)
    VARIABLE        reduce using rule 18 (operador_comparacion -> COMPARACION_LESS .)


state 68

    (19) operador_comparacion -> COMPARACION_LESS_EQ .

    ENTERO          reduce using rule 19 (operador_comparacion -> COMPARACION_LESS_EQ .)
    FLOTANTE        reduce using rule 19 (operador_comparacion -> COMPARACION_LESS_EQ .)
    COMILLAS        reduce using rule 19 (operador_comparacion -> COMPARACION_LESS_EQ .)
    VARIABLE        reduce using rule 19 (operador_comparacion -> COMPARACION_LESS_EQ .)


state 69

    (20) operador_comparacion -> COMPARACION_GREATER_EQ .

    ENTERO          reduce using rule 20 (operador_comparacion -> COMPARACION_GREATER_EQ .)
    FLOTANTE        reduce using rule 20 (operador_comparacion -> COMPARACION_GREATER_EQ .)
    COMILLAS        reduce using rule 20 (operador_comparacion -> COMPARACION_GREATER_EQ .)
    VARIABLE        reduce using rule 20 (operador_comparacion -> COMPARACION_GREATER_EQ .)


state 70

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion . SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (28) expresion -> expresion . OPERADOR expresion

    SEPARADOR       shift and go to state 71
    OPERADOR        shift and go to state 44


state 71

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR . VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    VARIABLE        shift and go to state 72


state 72

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE . OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    OPERADOR        shift and go to state 73


state 73

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR . OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    OPERADOR        shift and go to state 74


state 74

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR . T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    T_PARENTESIS_R  shift and go to state 75


state 75

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R . DELIMITADOR_L bloque DELIMITADOR_R

    DELIMITADOR_L   shift and go to state 76


state 76

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (12) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (13) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    VAL             shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17

    declaracion_variable           shift and go to state 10
    bloque                         shift and go to state 77
    instruccion                    shift and go to state 7
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 77

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 78


state 78

    (14) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .

    ESCRIBIR        reduce using rule 14 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    LEER            reduce using rule 14 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    VAL             reduce using rule 14 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    IF              reduce using rule 14 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    WHILE           reduce using rule 14 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    FOR             reduce using rule 14 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    DELIMITADOR_R   reduce using rule 14 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)

