Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNACION
    COMPARACION
    ELSE
    ENTERO
    FLOTANTE
    FOR
    IF
    LEER
    LOGICO
    OPERADOR
    VAL
    VARIABLE
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> funcion
Rule 2     funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R
Rule 3     bloque -> instruccion
Rule 4     instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR

Terminals, with rules where they appear

ASIGNACION           : 
COMILLAS             : 4
COMPARACION          : 
DELIMITADOR_L        : 2
DELIMITADOR_R        : 2
DOS_PUNTOS           : 4
ELSE                 : 
ENTERO               : 
ESCRIBIR             : 4
FLOTANTE             : 
FOR                  : 
FUNC                 : 2
IF                   : 
INIT                 : 2
LEER                 : 
LOGICO               : 
OPERADOR             : 
SEPARADOR            : 4
VAL                  : 
VARIABLE             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

bloque               : 2
funcion              : 1
instruccion          : 3
programa             : 0

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . funcion
    (2) funcion -> . FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R

    FUNC            shift and go to state 3

    programa                       shift and go to state 1
    funcion                        shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> funcion .

    $end            reduce using rule 1 (programa -> funcion .)


state 3

    (2) funcion -> FUNC . INIT DELIMITADOR_L bloque DELIMITADOR_R

    INIT            shift and go to state 4


state 4

    (2) funcion -> FUNC INIT . DELIMITADOR_L bloque DELIMITADOR_R

    DELIMITADOR_L   shift and go to state 5


state 5

    (2) funcion -> FUNC INIT DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion
    (4) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR

    ESCRIBIR        shift and go to state 8

    bloque                         shift and go to state 6
    instruccion                    shift and go to state 7

state 6

    (2) funcion -> FUNC INIT DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 9


state 7

    (3) bloque -> instruccion .

    DELIMITADOR_R   reduce using rule 3 (bloque -> instruccion .)


state 8

    (4) instruccion -> ESCRIBIR . DOS_PUNTOS COMILLAS SEPARADOR

    DOS_PUNTOS      shift and go to state 10


state 9

    (2) funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R .

    $end            reduce using rule 2 (funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R .)


state 10

    (4) instruccion -> ESCRIBIR DOS_PUNTOS . COMILLAS SEPARADOR

    COMILLAS        shift and go to state 11


state 11

    (4) instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS . SEPARADOR

    SEPARADOR       shift and go to state 12


state 12

    (4) instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .

    DELIMITADOR_R   reduce using rule 4 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)

