Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECREMENTO
    ELSE
    INCREMENTO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> funcion
Rule 2     funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R
Rule 3     bloque -> instruccion bloque
Rule 4     bloque -> instruccion
Rule 5     instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
Rule 6     instruccion -> LEER VARIABLE SEPARADOR
Rule 7     instruccion -> declaracion_variable
Rule 8     instruccion -> estructura_if
Rule 9     instruccion -> estructura_while
Rule 10    instruccion -> estructura_for
Rule 11    instruccion -> error SEPARADOR
Rule 12    declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR
Rule 13    estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
Rule 14    estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
Rule 15    estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
Rule 16    expresion_logica -> expresion_relacional
Rule 17    expresion_logica -> expresion_logica LOGICO expresion_relacional
Rule 18    operador_comparacion -> COMPARACION_GREATER
Rule 19    operador_comparacion -> COMPARACION_LESS
Rule 20    operador_comparacion -> COMPARACION_LESS_EQ
Rule 21    operador_comparacion -> COMPARACION_GREATER_EQ
Rule 22    expresion_relacional -> expresion COMPARACION_LESS expresion
Rule 23    expresion_relacional -> expresion COMPARACION_GREATER expresion
Rule 24    expresion_relacional -> expresion COMPARACION_LESS_EQ expresion
Rule 25    expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion
Rule 26    expresion_relacional -> expresion COMPARACION_EQ expresion
Rule 27    expresion_relacional -> expresion COMPARACION_NEQ expresion
Rule 28    expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
Rule 29    expresion -> expresion OPERADOR expresion
Rule 30    expresion -> ENTERO
Rule 31    expresion -> FLOTANTE
Rule 32    expresion -> COMILLAS
Rule 33    expresion -> VARIABLE

Terminals, with rules where they appear

ASIGNACION           : 12
COMILLAS             : 5 32
COMPARACION_EQ       : 26
COMPARACION_GREATER  : 18 23
COMPARACION_GREATER_EQ : 21 25
COMPARACION_LESS     : 19 22
COMPARACION_LESS_EQ  : 20 24
COMPARACION_NEQ      : 27
DECREMENTO           : 
DELIMITADOR_L        : 2 13 14 15
DELIMITADOR_R        : 2 13 14 15
DOS_PUNTOS           : 5
ELSE                 : 
ENTERO               : 30
ESCRIBIR             : 5
FLOTANTE             : 31
FOR                  : 15
FUNC                 : 2
IF                   : 13
INCREMENTO           : 
INIT                 : 2
LEER                 : 6
LOGICO               : 17
OPERADOR             : 15 15 29
SEPARADOR            : 5 6 11 12 15
T_PARENTESIS_L       : 15 28
T_PARENTESIS_R       : 15 28
VAL                  : 12
VARIABLE             : 6 12 15 15 33
WHILE                : 14
error                : 11

Nonterminals, with rules where they appear

bloque               : 2 3 13 14 15
declaracion_variable : 7 15
estructura_for       : 10
estructura_if        : 8
estructura_while     : 9
expresion            : 12 15 22 22 23 23 24 24 25 25 26 26 27 27 29 29
expresion_logica     : 13 14 17
expresion_relacional : 16 17 28
funcion              : 1
instruccion          : 3 4
operador_comparacion : 15
programa             : 0

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . funcion
    (2) funcion -> . FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R

    FUNC            shift and go to state 3

    programa                       shift and go to state 1
    funcion                        shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> funcion .

    $end            reduce using rule 1 (programa -> funcion .)


state 3

    (2) funcion -> FUNC . INIT DELIMITADOR_L bloque DELIMITADOR_R

    INIT            shift and go to state 4


state 4

    (2) funcion -> FUNC INIT . DELIMITADOR_L bloque DELIMITADOR_R

    DELIMITADOR_L   shift and go to state 5


state 5

    (2) funcion -> FUNC INIT DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) instruccion -> . error SEPARADOR
    (12) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (13) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (15) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    error           shift and go to state 14
    VAL             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    bloque                         shift and go to state 6
    instruccion                    shift and go to state 7
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 6

    (2) funcion -> FUNC INIT DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 19


state 7

    (3) bloque -> instruccion . bloque
    (4) bloque -> instruccion .
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) instruccion -> . error SEPARADOR
    (12) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (13) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (15) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    DELIMITADOR_R   reduce using rule 4 (bloque -> instruccion .)
    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    error           shift and go to state 14
    VAL             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    instruccion                    shift and go to state 7
    bloque                         shift and go to state 20
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 8

    (5) instruccion -> ESCRIBIR . DOS_PUNTOS COMILLAS SEPARADOR

    DOS_PUNTOS      shift and go to state 21


state 9

    (6) instruccion -> LEER . VARIABLE SEPARADOR

    VARIABLE        shift and go to state 22


state 10

    (7) instruccion -> declaracion_variable .

    ESCRIBIR        reduce using rule 7 (instruccion -> declaracion_variable .)
    LEER            reduce using rule 7 (instruccion -> declaracion_variable .)
    error           reduce using rule 7 (instruccion -> declaracion_variable .)
    VAL             reduce using rule 7 (instruccion -> declaracion_variable .)
    IF              reduce using rule 7 (instruccion -> declaracion_variable .)
    WHILE           reduce using rule 7 (instruccion -> declaracion_variable .)
    FOR             reduce using rule 7 (instruccion -> declaracion_variable .)
    DELIMITADOR_R   reduce using rule 7 (instruccion -> declaracion_variable .)


state 11

    (8) instruccion -> estructura_if .

    ESCRIBIR        reduce using rule 8 (instruccion -> estructura_if .)
    LEER            reduce using rule 8 (instruccion -> estructura_if .)
    error           reduce using rule 8 (instruccion -> estructura_if .)
    VAL             reduce using rule 8 (instruccion -> estructura_if .)
    IF              reduce using rule 8 (instruccion -> estructura_if .)
    WHILE           reduce using rule 8 (instruccion -> estructura_if .)
    FOR             reduce using rule 8 (instruccion -> estructura_if .)
    DELIMITADOR_R   reduce using rule 8 (instruccion -> estructura_if .)


state 12

    (9) instruccion -> estructura_while .

    ESCRIBIR        reduce using rule 9 (instruccion -> estructura_while .)
    LEER            reduce using rule 9 (instruccion -> estructura_while .)
    error           reduce using rule 9 (instruccion -> estructura_while .)
    VAL             reduce using rule 9 (instruccion -> estructura_while .)
    IF              reduce using rule 9 (instruccion -> estructura_while .)
    WHILE           reduce using rule 9 (instruccion -> estructura_while .)
    FOR             reduce using rule 9 (instruccion -> estructura_while .)
    DELIMITADOR_R   reduce using rule 9 (instruccion -> estructura_while .)


state 13

    (10) instruccion -> estructura_for .

    ESCRIBIR        reduce using rule 10 (instruccion -> estructura_for .)
    LEER            reduce using rule 10 (instruccion -> estructura_for .)
    error           reduce using rule 10 (instruccion -> estructura_for .)
    VAL             reduce using rule 10 (instruccion -> estructura_for .)
    IF              reduce using rule 10 (instruccion -> estructura_for .)
    WHILE           reduce using rule 10 (instruccion -> estructura_for .)
    FOR             reduce using rule 10 (instruccion -> estructura_for .)
    DELIMITADOR_R   reduce using rule 10 (instruccion -> estructura_for .)


state 14

    (11) instruccion -> error . SEPARADOR

    SEPARADOR       shift and go to state 23


state 15

    (12) declaracion_variable -> VAL . VARIABLE ASIGNACION expresion SEPARADOR

    VARIABLE        shift and go to state 24


state 16

    (13) estructura_if -> IF . expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (16) expresion_logica -> . expresion_relacional
    (17) expresion_logica -> . expresion_logica LOGICO expresion_relacional
    (22) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (23) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (24) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (27) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (28) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion_logica               shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion                      shift and go to state 27

state 17

    (14) estructura_while -> WHILE . expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (16) expresion_logica -> . expresion_relacional
    (17) expresion_logica -> . expresion_logica LOGICO expresion_relacional
    (22) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (23) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (24) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (27) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (28) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion_logica               shift and go to state 33
    expresion_relacional           shift and go to state 26
    expresion                      shift and go to state 27

state 18

    (15) estructura_for -> FOR . T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    T_PARENTESIS_L  shift and go to state 34


state 19

    (2) funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R .

    $end            reduce using rule 2 (funcion -> FUNC INIT DELIMITADOR_L bloque DELIMITADOR_R .)


state 20

    (3) bloque -> instruccion bloque .

    DELIMITADOR_R   reduce using rule 3 (bloque -> instruccion bloque .)


state 21

    (5) instruccion -> ESCRIBIR DOS_PUNTOS . COMILLAS SEPARADOR

    COMILLAS        shift and go to state 35


state 22

    (6) instruccion -> LEER VARIABLE . SEPARADOR

    SEPARADOR       shift and go to state 36


state 23

    (11) instruccion -> error SEPARADOR .

    ESCRIBIR        reduce using rule 11 (instruccion -> error SEPARADOR .)
    LEER            reduce using rule 11 (instruccion -> error SEPARADOR .)
    error           reduce using rule 11 (instruccion -> error SEPARADOR .)
    VAL             reduce using rule 11 (instruccion -> error SEPARADOR .)
    IF              reduce using rule 11 (instruccion -> error SEPARADOR .)
    WHILE           reduce using rule 11 (instruccion -> error SEPARADOR .)
    FOR             reduce using rule 11 (instruccion -> error SEPARADOR .)
    DELIMITADOR_R   reduce using rule 11 (instruccion -> error SEPARADOR .)


state 24

    (12) declaracion_variable -> VAL VARIABLE . ASIGNACION expresion SEPARADOR

    ASIGNACION      shift and go to state 37


state 25

    (13) estructura_if -> IF expresion_logica . DELIMITADOR_L bloque DELIMITADOR_R
    (17) expresion_logica -> expresion_logica . LOGICO expresion_relacional

    DELIMITADOR_L   shift and go to state 38
    LOGICO          shift and go to state 39


state 26

    (16) expresion_logica -> expresion_relacional .

    DELIMITADOR_L   reduce using rule 16 (expresion_logica -> expresion_relacional .)
    LOGICO          reduce using rule 16 (expresion_logica -> expresion_relacional .)


state 27

    (22) expresion_relacional -> expresion . COMPARACION_LESS expresion
    (23) expresion_relacional -> expresion . COMPARACION_GREATER expresion
    (24) expresion_relacional -> expresion . COMPARACION_LESS_EQ expresion
    (25) expresion_relacional -> expresion . COMPARACION_GREATER_EQ expresion
    (26) expresion_relacional -> expresion . COMPARACION_EQ expresion
    (27) expresion_relacional -> expresion . COMPARACION_NEQ expresion
    (29) expresion -> expresion . OPERADOR expresion

    COMPARACION_LESS shift and go to state 40
    COMPARACION_GREATER shift and go to state 41
    COMPARACION_LESS_EQ shift and go to state 42
    COMPARACION_GREATER_EQ shift and go to state 43
    COMPARACION_EQ  shift and go to state 44
    COMPARACION_NEQ shift and go to state 45
    OPERADOR        shift and go to state 46


state 28

    (28) expresion_relacional -> T_PARENTESIS_L . expresion_relacional T_PARENTESIS_R
    (22) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (23) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (24) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (27) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (28) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion_relacional           shift and go to state 47
    expresion                      shift and go to state 27

state 29

    (30) expresion -> ENTERO .

    COMPARACION_LESS reduce using rule 30 (expresion -> ENTERO .)
    COMPARACION_GREATER reduce using rule 30 (expresion -> ENTERO .)
    COMPARACION_LESS_EQ reduce using rule 30 (expresion -> ENTERO .)
    COMPARACION_GREATER_EQ reduce using rule 30 (expresion -> ENTERO .)
    COMPARACION_EQ  reduce using rule 30 (expresion -> ENTERO .)
    COMPARACION_NEQ reduce using rule 30 (expresion -> ENTERO .)
    OPERADOR        reduce using rule 30 (expresion -> ENTERO .)
    SEPARADOR       reduce using rule 30 (expresion -> ENTERO .)
    DELIMITADOR_L   reduce using rule 30 (expresion -> ENTERO .)
    LOGICO          reduce using rule 30 (expresion -> ENTERO .)
    T_PARENTESIS_R  reduce using rule 30 (expresion -> ENTERO .)


state 30

    (31) expresion -> FLOTANTE .

    COMPARACION_LESS reduce using rule 31 (expresion -> FLOTANTE .)
    COMPARACION_GREATER reduce using rule 31 (expresion -> FLOTANTE .)
    COMPARACION_LESS_EQ reduce using rule 31 (expresion -> FLOTANTE .)
    COMPARACION_GREATER_EQ reduce using rule 31 (expresion -> FLOTANTE .)
    COMPARACION_EQ  reduce using rule 31 (expresion -> FLOTANTE .)
    COMPARACION_NEQ reduce using rule 31 (expresion -> FLOTANTE .)
    OPERADOR        reduce using rule 31 (expresion -> FLOTANTE .)
    SEPARADOR       reduce using rule 31 (expresion -> FLOTANTE .)
    DELIMITADOR_L   reduce using rule 31 (expresion -> FLOTANTE .)
    LOGICO          reduce using rule 31 (expresion -> FLOTANTE .)
    T_PARENTESIS_R  reduce using rule 31 (expresion -> FLOTANTE .)


state 31

    (32) expresion -> COMILLAS .

    COMPARACION_LESS reduce using rule 32 (expresion -> COMILLAS .)
    COMPARACION_GREATER reduce using rule 32 (expresion -> COMILLAS .)
    COMPARACION_LESS_EQ reduce using rule 32 (expresion -> COMILLAS .)
    COMPARACION_GREATER_EQ reduce using rule 32 (expresion -> COMILLAS .)
    COMPARACION_EQ  reduce using rule 32 (expresion -> COMILLAS .)
    COMPARACION_NEQ reduce using rule 32 (expresion -> COMILLAS .)
    OPERADOR        reduce using rule 32 (expresion -> COMILLAS .)
    SEPARADOR       reduce using rule 32 (expresion -> COMILLAS .)
    DELIMITADOR_L   reduce using rule 32 (expresion -> COMILLAS .)
    LOGICO          reduce using rule 32 (expresion -> COMILLAS .)
    T_PARENTESIS_R  reduce using rule 32 (expresion -> COMILLAS .)


state 32

    (33) expresion -> VARIABLE .

    COMPARACION_LESS reduce using rule 33 (expresion -> VARIABLE .)
    COMPARACION_GREATER reduce using rule 33 (expresion -> VARIABLE .)
    COMPARACION_LESS_EQ reduce using rule 33 (expresion -> VARIABLE .)
    COMPARACION_GREATER_EQ reduce using rule 33 (expresion -> VARIABLE .)
    COMPARACION_EQ  reduce using rule 33 (expresion -> VARIABLE .)
    COMPARACION_NEQ reduce using rule 33 (expresion -> VARIABLE .)
    OPERADOR        reduce using rule 33 (expresion -> VARIABLE .)
    SEPARADOR       reduce using rule 33 (expresion -> VARIABLE .)
    DELIMITADOR_L   reduce using rule 33 (expresion -> VARIABLE .)
    LOGICO          reduce using rule 33 (expresion -> VARIABLE .)
    T_PARENTESIS_R  reduce using rule 33 (expresion -> VARIABLE .)


state 33

    (14) estructura_while -> WHILE expresion_logica . DELIMITADOR_L bloque DELIMITADOR_R
    (17) expresion_logica -> expresion_logica . LOGICO expresion_relacional

    DELIMITADOR_L   shift and go to state 48
    LOGICO          shift and go to state 39


state 34

    (15) estructura_for -> FOR T_PARENTESIS_L . declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (12) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR

    VAL             shift and go to state 15

    declaracion_variable           shift and go to state 49

state 35

    (5) instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS . SEPARADOR

    SEPARADOR       shift and go to state 50


state 36

    (6) instruccion -> LEER VARIABLE SEPARADOR .

    ESCRIBIR        reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    LEER            reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    error           reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    VAL             reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    IF              reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    WHILE           reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    FOR             reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)
    DELIMITADOR_R   reduce using rule 6 (instruccion -> LEER VARIABLE SEPARADOR .)


state 37

    (12) declaracion_variable -> VAL VARIABLE ASIGNACION . expresion SEPARADOR
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 51

state 38

    (13) estructura_if -> IF expresion_logica DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) instruccion -> . error SEPARADOR
    (12) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (13) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (15) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    error           shift and go to state 14
    VAL             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    bloque                         shift and go to state 52
    instruccion                    shift and go to state 7
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 39

    (17) expresion_logica -> expresion_logica LOGICO . expresion_relacional
    (22) expresion_relacional -> . expresion COMPARACION_LESS expresion
    (23) expresion_relacional -> . expresion COMPARACION_GREATER expresion
    (24) expresion_relacional -> . expresion COMPARACION_LESS_EQ expresion
    (25) expresion_relacional -> . expresion COMPARACION_GREATER_EQ expresion
    (26) expresion_relacional -> . expresion COMPARACION_EQ expresion
    (27) expresion_relacional -> . expresion COMPARACION_NEQ expresion
    (28) expresion_relacional -> . T_PARENTESIS_L expresion_relacional T_PARENTESIS_R
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    T_PARENTESIS_L  shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion_relacional           shift and go to state 53
    expresion                      shift and go to state 27

state 40

    (22) expresion_relacional -> expresion COMPARACION_LESS . expresion
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 54

state 41

    (23) expresion_relacional -> expresion COMPARACION_GREATER . expresion
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 55

state 42

    (24) expresion_relacional -> expresion COMPARACION_LESS_EQ . expresion
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 56

state 43

    (25) expresion_relacional -> expresion COMPARACION_GREATER_EQ . expresion
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 57

state 44

    (26) expresion_relacional -> expresion COMPARACION_EQ . expresion
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 58

state 45

    (27) expresion_relacional -> expresion COMPARACION_NEQ . expresion
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 59

state 46

    (29) expresion -> expresion OPERADOR . expresion
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 60

state 47

    (28) expresion_relacional -> T_PARENTESIS_L expresion_relacional . T_PARENTESIS_R

    T_PARENTESIS_R  shift and go to state 61


state 48

    (14) estructura_while -> WHILE expresion_logica DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) instruccion -> . error SEPARADOR
    (12) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (13) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (15) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    error           shift and go to state 14
    VAL             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    bloque                         shift and go to state 62
    instruccion                    shift and go to state 7
    declaracion_variable           shift and go to state 10
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 49

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable . VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    VARIABLE        shift and go to state 63


state 50

    (5) instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .

    ESCRIBIR        reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    LEER            reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    error           reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    VAL             reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    IF              reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    WHILE           reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    FOR             reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)
    DELIMITADOR_R   reduce using rule 5 (instruccion -> ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR .)


state 51

    (12) declaracion_variable -> VAL VARIABLE ASIGNACION expresion . SEPARADOR
    (29) expresion -> expresion . OPERADOR expresion

    SEPARADOR       shift and go to state 64
    OPERADOR        shift and go to state 46


state 52

    (13) estructura_if -> IF expresion_logica DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 65


state 53

    (17) expresion_logica -> expresion_logica LOGICO expresion_relacional .

    DELIMITADOR_L   reduce using rule 17 (expresion_logica -> expresion_logica LOGICO expresion_relacional .)
    LOGICO          reduce using rule 17 (expresion_logica -> expresion_logica LOGICO expresion_relacional .)


state 54

    (22) expresion_relacional -> expresion COMPARACION_LESS expresion .
    (29) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 22 (expresion_relacional -> expresion COMPARACION_LESS expresion .)
    LOGICO          reduce using rule 22 (expresion_relacional -> expresion COMPARACION_LESS expresion .)
    T_PARENTESIS_R  reduce using rule 22 (expresion_relacional -> expresion COMPARACION_LESS expresion .)
    OPERADOR        shift and go to state 46


state 55

    (23) expresion_relacional -> expresion COMPARACION_GREATER expresion .
    (29) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 23 (expresion_relacional -> expresion COMPARACION_GREATER expresion .)
    LOGICO          reduce using rule 23 (expresion_relacional -> expresion COMPARACION_GREATER expresion .)
    T_PARENTESIS_R  reduce using rule 23 (expresion_relacional -> expresion COMPARACION_GREATER expresion .)
    OPERADOR        shift and go to state 46


state 56

    (24) expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .
    (29) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 24 (expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .)
    LOGICO          reduce using rule 24 (expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .)
    T_PARENTESIS_R  reduce using rule 24 (expresion_relacional -> expresion COMPARACION_LESS_EQ expresion .)
    OPERADOR        shift and go to state 46


state 57

    (25) expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .
    (29) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 25 (expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .)
    LOGICO          reduce using rule 25 (expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .)
    T_PARENTESIS_R  reduce using rule 25 (expresion_relacional -> expresion COMPARACION_GREATER_EQ expresion .)
    OPERADOR        shift and go to state 46


state 58

    (26) expresion_relacional -> expresion COMPARACION_EQ expresion .
    (29) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 26 (expresion_relacional -> expresion COMPARACION_EQ expresion .)
    LOGICO          reduce using rule 26 (expresion_relacional -> expresion COMPARACION_EQ expresion .)
    T_PARENTESIS_R  reduce using rule 26 (expresion_relacional -> expresion COMPARACION_EQ expresion .)
    OPERADOR        shift and go to state 46


state 59

    (27) expresion_relacional -> expresion COMPARACION_NEQ expresion .
    (29) expresion -> expresion . OPERADOR expresion

    DELIMITADOR_L   reduce using rule 27 (expresion_relacional -> expresion COMPARACION_NEQ expresion .)
    LOGICO          reduce using rule 27 (expresion_relacional -> expresion COMPARACION_NEQ expresion .)
    T_PARENTESIS_R  reduce using rule 27 (expresion_relacional -> expresion COMPARACION_NEQ expresion .)
    OPERADOR        shift and go to state 46


state 60

    (29) expresion -> expresion OPERADOR expresion .
    (29) expresion -> expresion . OPERADOR expresion

    COMPARACION_LESS reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_GREATER reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_LESS_EQ reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_GREATER_EQ reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_EQ  reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    COMPARACION_NEQ reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    OPERADOR        reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    SEPARADOR       reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    DELIMITADOR_L   reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    LOGICO          reduce using rule 29 (expresion -> expresion OPERADOR expresion .)
    T_PARENTESIS_R  reduce using rule 29 (expresion -> expresion OPERADOR expresion .)

  ! OPERADOR        [ shift and go to state 46 ]


state 61

    (28) expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .

    DELIMITADOR_L   reduce using rule 28 (expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .)
    LOGICO          reduce using rule 28 (expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .)
    T_PARENTESIS_R  reduce using rule 28 (expresion_relacional -> T_PARENTESIS_L expresion_relacional T_PARENTESIS_R .)


state 62

    (14) estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 66


state 63

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE . operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (18) operador_comparacion -> . COMPARACION_GREATER
    (19) operador_comparacion -> . COMPARACION_LESS
    (20) operador_comparacion -> . COMPARACION_LESS_EQ
    (21) operador_comparacion -> . COMPARACION_GREATER_EQ

    COMPARACION_GREATER shift and go to state 68
    COMPARACION_LESS shift and go to state 69
    COMPARACION_LESS_EQ shift and go to state 70
    COMPARACION_GREATER_EQ shift and go to state 71

    operador_comparacion           shift and go to state 67

state 64

    (12) declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .

    ESCRIBIR        reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    LEER            reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    error           reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    VAL             reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    IF              reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    WHILE           reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    FOR             reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    DELIMITADOR_R   reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)
    VARIABLE        reduce using rule 12 (declaracion_variable -> VAL VARIABLE ASIGNACION expresion SEPARADOR .)


state 65

    (13) estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .

    ESCRIBIR        reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    LEER            reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    error           reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    VAL             reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    IF              reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    WHILE           reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    FOR             reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    DELIMITADOR_R   reduce using rule 13 (estructura_if -> IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)


state 66

    (14) estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .

    ESCRIBIR        reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    LEER            reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    error           reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    VAL             reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    IF              reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    WHILE           reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    FOR             reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)
    DELIMITADOR_R   reduce using rule 14 (estructura_while -> WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R .)


state 67

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion . expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (29) expresion -> . expresion OPERADOR expresion
    (30) expresion -> . ENTERO
    (31) expresion -> . FLOTANTE
    (32) expresion -> . COMILLAS
    (33) expresion -> . VARIABLE

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    COMILLAS        shift and go to state 31
    VARIABLE        shift and go to state 32

    expresion                      shift and go to state 72

state 68

    (18) operador_comparacion -> COMPARACION_GREATER .

    ENTERO          reduce using rule 18 (operador_comparacion -> COMPARACION_GREATER .)
    FLOTANTE        reduce using rule 18 (operador_comparacion -> COMPARACION_GREATER .)
    COMILLAS        reduce using rule 18 (operador_comparacion -> COMPARACION_GREATER .)
    VARIABLE        reduce using rule 18 (operador_comparacion -> COMPARACION_GREATER .)


state 69

    (19) operador_comparacion -> COMPARACION_LESS .

    ENTERO          reduce using rule 19 (operador_comparacion -> COMPARACION_LESS .)
    FLOTANTE        reduce using rule 19 (operador_comparacion -> COMPARACION_LESS .)
    COMILLAS        reduce using rule 19 (operador_comparacion -> COMPARACION_LESS .)
    VARIABLE        reduce using rule 19 (operador_comparacion -> COMPARACION_LESS .)


state 70

    (20) operador_comparacion -> COMPARACION_LESS_EQ .

    ENTERO          reduce using rule 20 (operador_comparacion -> COMPARACION_LESS_EQ .)
    FLOTANTE        reduce using rule 20 (operador_comparacion -> COMPARACION_LESS_EQ .)
    COMILLAS        reduce using rule 20 (operador_comparacion -> COMPARACION_LESS_EQ .)
    VARIABLE        reduce using rule 20 (operador_comparacion -> COMPARACION_LESS_EQ .)


state 71

    (21) operador_comparacion -> COMPARACION_GREATER_EQ .

    ENTERO          reduce using rule 21 (operador_comparacion -> COMPARACION_GREATER_EQ .)
    FLOTANTE        reduce using rule 21 (operador_comparacion -> COMPARACION_GREATER_EQ .)
    COMILLAS        reduce using rule 21 (operador_comparacion -> COMPARACION_GREATER_EQ .)
    VARIABLE        reduce using rule 21 (operador_comparacion -> COMPARACION_GREATER_EQ .)


state 72

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion . SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R
    (29) expresion -> expresion . OPERADOR expresion

    SEPARADOR       shift and go to state 73
    OPERADOR        shift and go to state 46


state 73

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR . VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    VARIABLE        shift and go to state 74


state 74

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE . OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    OPERADOR        shift and go to state 75


state 75

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR . OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    OPERADOR        shift and go to state 76


state 76

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR . T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    T_PARENTESIS_R  shift and go to state 77


state 77

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R . DELIMITADOR_L bloque DELIMITADOR_R

    DELIMITADOR_L   shift and go to state 78


state 78

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L . bloque DELIMITADOR_R
    (3) bloque -> . instruccion bloque
    (4) bloque -> . instruccion
    (5) instruccion -> . ESCRIBIR DOS_PUNTOS COMILLAS SEPARADOR
    (6) instruccion -> . LEER VARIABLE SEPARADOR
    (7) instruccion -> . declaracion_variable
    (8) instruccion -> . estructura_if
    (9) instruccion -> . estructura_while
    (10) instruccion -> . estructura_for
    (11) instruccion -> . error SEPARADOR
    (12) declaracion_variable -> . VAL VARIABLE ASIGNACION expresion SEPARADOR
    (13) estructura_if -> . IF expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (14) estructura_while -> . WHILE expresion_logica DELIMITADOR_L bloque DELIMITADOR_R
    (15) estructura_for -> . FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R

    ESCRIBIR        shift and go to state 8
    LEER            shift and go to state 9
    error           shift and go to state 14
    VAL             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    declaracion_variable           shift and go to state 10
    bloque                         shift and go to state 79
    instruccion                    shift and go to state 7
    estructura_if                  shift and go to state 11
    estructura_while               shift and go to state 12
    estructura_for                 shift and go to state 13

state 79

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque . DELIMITADOR_R

    DELIMITADOR_R   shift and go to state 80


state 80

    (15) estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .

    ESCRIBIR        reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    LEER            reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    error           reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    VAL             reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    IF              reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    WHILE           reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    FOR             reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)
    DELIMITADOR_R   reduce using rule 15 (estructura_for -> FOR T_PARENTESIS_L declaracion_variable VARIABLE operador_comparacion expresion SEPARADOR VARIABLE OPERADOR OPERADOR T_PARENTESIS_R DELIMITADOR_L bloque DELIMITADOR_R .)

